---
- name: Collect f5 running configuration
  f5networks.f5_modules.bigip_command:
    commands:
      - "tmsh show running-config"
    provider: "{{ _provider_ }}"
  delegate_to: localhost
  ignore_errors: true
  register: config_backup

# regex_replace('\r\n', '\n'): Ensures that the configuration is formatted properly with new lines,
# in case the original output contains carriage return and line feed (\r\n).
- name: Ensure the config is properly formatted
  ansible.builtin.set_fact:
    formatted_config: "{{ config_backup.stdout[0] | regex_replace('\r\n', '\n') }}"
  delegate_to: localhost
  ignore_errors: true

- name: Save the running config to a file
  ansible.builtin.copy:
    content: "{{ formatted_config }}"
    dest: "{{ _running_config_file_path_ }}"
  delegate_to: localhost
  ignore_errors: true

# UCS file backup
- name: UCS Backup - Remove older ucs file 
  f5networks.f5_modules.bigip_ucs:
    ucs: "{{ _ucs_file_name_ }}"
    state: absent
    provider: "{{ _provider_ }}"
  delegate_to: localhost
  ignore_errors: true

- name: UCS Backup - Create empty file on controller
  ansible.builtin.file:
    path: "{{ _ucs_file_backup_path_ }}"
    state: touch
  delegate_to: localhost
  ignore_errors: true

- name: UCS Backup - Download a new UCS 
  f5networks.f5_modules.bigip_ucs_fetch:
    src: "{{ _ucs_file_name_ }}"
    dest: "{{ _ucs_file_backup_path_ }}"
    provider: "{{ _provider_ }}"
    async_timeout: 600
  delegate_to: localhost
  ignore_errors: true
